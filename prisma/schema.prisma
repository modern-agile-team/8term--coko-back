// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  nickname   String     @db.VarChar(50)
  profileImage String?
  maxHealthPoint Int    @default(5)
  lastLogin  DateTime   @default(now())
  level      Int        @default(1)
  experience Int        @default(0)
  experienceForNextLevel Int @default(50)
  point      Int        @default(0)

  userItems UserItems[] //1:N관계, Items와 userItems 연결
}

model Items {
  id          Int        @id @default(autoincrement())
  name        String
  cost        Int
  image       String      
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  userItems   UserItems[] //1:N관계, Items와 userItems 연결
}

model UserItems {
  id          Int        @id @default(autoincrement())
  userId      Int
  itemId      Int
  createdAt   DateTime   @default(now())
  isEquipped  Boolean    @default(false)
  quantity    Int        @default(1)

  users Users @relation(fields: [userId], references: [id], onDelete: Cascade)
  items Items @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([itemId])
}
